#docker-compose
services:
  web:
    build: .
    command: sh -c "python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    env_file:
      - .env
    ports:
      - "8000:8000"
    depends_on:
      - redis
      - postgres
    environment:
      - CELERY_BROKER=redis://redis:6379/0
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DEBUG=${DEBUG}
      - DJANGO_LOGLEVEL=${DJANGO_LOGLEVEL}
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS}
      - DATABASE_ENGINE=${DATABASE_ENGINE}
      - DATABASE_NAME=${DATABASE_NAME}
      - DATABASE_USERNAME=${DATABASE_USERNAME}
 
      - DATABASE_PASSWORD=${DATABASE_PASSWORD}
      - DATABASE_HOST=${DATABASE_HOST}
      - DATABASE_PORT=${DATABASE_PORT}

  celery:
    build: .
    command: sh -c "celery -A leaveProject worker --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - redis
      - postgres
    environment:
      - DJANGO_SETTINGS_MODULE=leaveProject.settings
      - DATABASE_NAME=${DATABASE_NAME} 
      - CELERY_BROKER=redis://redis:6379/0
    env_file:
      - .env 

  beat:
    build: .
    command: sh -c "python manage.py migrate django_celery_beat && celery -A leaveProject beat --loglevel=info"
    volumes:
      - .:/app
    depends_on:
      - postgres
      - redis
    environment:
      - DJANGO_SETTINGS_MODULE=leaveProject.settings
      - DATABASE_NAME=${DATABASE_NAME} 
      - CELERY_BROKER=redis://redis:6379/0
    env_file:
      - .env 

  redis:
    image: redis:alpine
    ports:
      - "6379:6379"

  postgres:
    image: postgres:17

    ports:
      - "5432:5432"
    environment:
      - POSTGRES_DB=${DATABASE_NAME}
      - POSTGRES_USER=${DATABASE_USERNAME}
      - POSTGRES_PASSWORD=${DATABASE_PASSWORD}
    volumes:
      - pg_data:/var/lib/postgresql/data
    env_file:
      - .env 

volumes:
  pg_data: